@use "../../../../src/styles/scss/mixins";
@use "../../../../src/styles/scss/colors";
@use "../../../../src/styles/scss/spacing" as s;
@use "../../../../src/styles/scss/typography/mixins" as type;
@use "sass:math";
@use "sass:list";

@include mixins.logo-animation;

.cards {
  position: relative;
  display: flex;
  flex-direction: column;
  row-gap: 40px;
  margin-bottom: 150px;

  @include mixins.md {
    & > div:not(.line):first-child {
      margin-top: 0;
    }
    & > div:not(.line):last-child {
      margin-bottom: 0;
    }
  }

  & > div:not(.line) {
    width: 100%;
    height: 360px;
    display: flex;
    flex-direction: column;
    justify-content: center;
    background-color: colors.$black;
    padding: 40px 30px;
    border: 0.75px solid;
    border-image: linear-gradient(180deg, #555555 0%, rgba(85, 85, 85, 0) 100%) 1;
    transition: opacity 300ms ease-out;

    $opacities: 1, 0.5, 0.4, 0.3, 0.2, 0.1;

    $topValue: 0;
    @for $i from 1 through 6 {
      &:nth-child(#{$i}) {
        transform: translateY(#{$topValue}px);
      }

      &:global(.stacked-#{$i}) {
        opacity: nth($list: $opacities, $n: $i);
      }
      
      $topValue: $topValue + 32;
    }

    &:last-child::before {
      content: "";
      position: absolute;
      left: calc(-85px);
      margin-bottom: -80px;
      width: 40px;
      height: 40px;
      background-color: colors.$black;
      z-index: 5;
    }

    &.active {
      border-image: linear-gradient(180deg, #555555 100%, rgba(85, 85, 85, 0) 100%) 1;
      .number {
        background: colors.$lightGray;
        color: colors.$dark;
      }
    }

    svg {
      animation: logo-animation 3.5s ease infinite alternate both;
    }

    h3 {
      @include type.heading-small;
      margin: s.$spacer-32 0;
    }

    @include mixins.md {
      padding: 50px 40px 80px 40px !important;
      height: 320px;

      svg {
        width: 40px;
        height: 40px;
      }
    }
  }

  & > div:last-child {
    .number {
      overflow: hidden;
    }
  }
}

.line {
  position: absolute;
  z-index: -2;
  top: 50%;
  left: -65px;
  height: calc(100% * 8.6);
  width: 1px;
  border-left: 1px solid colors.$carbon;
  display: flex;
  align-items: center;
  justify-content: center;

  &:last-child {
    border-left: 1px solid colors.$lightGray /* $lightGray */;
    height: 0;
    transition: height 150ms ease;
  }
}

.lineFill {
  z-index: -1;
}

.number {
  position: absolute;
  left: -85px;
  display: flex;
  justify-content: center;
  align-items: center;
  background: colors.$lightDark;
  height: 40px;
  width: 40px;
  border-radius: 50%;
  color: colors.$darkGray;

  &::after {
    content: "";
    position: absolute;
    z-index: -1;
    top: 0;
    left: 50%;
    height: calc(100% + 255px);
    width: 1px;
    border-left: 1px dashed colors.$carbon;
  }
}

.cards.web {
  & > div:not(.line) {
    height: auto;
    padding: 56px 56px 96px;
  }

  :global {
    @for $i from 1 to 6 {
      .opacity-#{$i} {
        opacity: math.div($i, 10);
      }
    }
  }
}
